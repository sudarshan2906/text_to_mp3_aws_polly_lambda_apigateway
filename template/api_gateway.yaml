AWSTemplateFormatVersion: "2010-09-09"
Description: "-"

Parameters:
  ApiName:
    Type: String
  LambdaFunctionArn:
    Type: String


Resources:

  ApiGateway:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Description: A test API
      Name: !Ref ApiName

  GetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !GetAtt
        - ApiGateway
        - RootResourceId
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Join ["", ["arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/",!Ref LambdaFunctionArn,"/invocations"]]
        RequestTemplates:
          application/json: |
            {
            "query": {
                #foreach($queryParam in $input.params().querystring.keySet())
                "$queryParam": "$util.escapeJavaScript($input.params().querystring.get($queryParam))" #if($foreach.hasNext),#end
                #end
              }
            }
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        PassthroughBehavior: WHEN_NO_TEMPLATES
        Credentials: !GetAtt ApiRole.Arn
        TimeoutInMillis: 29000
      MethodResponses:
        - StatusCode: 200
          ResponseModels: { "application/json": "Empty" }
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true

  ApiRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ApiRole-test
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyName: ApiPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: "logs:*"
                Resource: "*"
              - Effect: Allow
                Action: "lambda:InvokeFunction"
                Resource: !Ref LambdaFunctionArn
